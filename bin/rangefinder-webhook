#! /usr/bin/env ruby

require 'rubygems'
require 'optparse'
require 'yaml'
require 'logger'
require 'rangefinder/webhook'

defaults = {
  :port    => 9292,
  :bind    => '0.0.0.0',
  :logfile => $stderr,
  :app_identifier   => nil,
  :webhook_secret   => nil,
  :private_key_file => '',
}
loglevel   = Logger::INFO
configfile = [ File.expand_path('~/.rangefinder.conf'), '/etc/rangefinder/config.yaml'].select { |file| File.exist? file }.first
options    = {}
ssl_opts   = {:verify_peer => false}

optparse = OptionParser.new { |opts|
    opts.banner = "Usage : rangefinder [-c config] [-p <port>] [-l [logfile]] [-d]
         -- Runs the Rangefinder impact analysis tool as a GitHub application.

"

    opts.on("-c CONFIGFILE", "--config CONFIGFILE", "Load configuration from a file. (/etc/rangefinder/config.yaml)") do |arg|
        configfile = arg
    end

    opts.on("-d", "--debug", "Display or log debugging messages") do
        loglevel = Logger::DEBUG
    end

    opts.on("-l [LOGFILE]", "--logfile [LOGFILE]", "Path to logfile. Defaults to no logging, or /var/log/rangefinder if no filename is passed.") do |arg|
        options[:logfile] = arg || '/var/log/rangefinder'
    end

    opts.on("-p PORT", "--port PORT", "Port for the server to listen on. Defaults to 9292.") do |arg|
        options[:port] = arg
    end

    opts.separator('')

    opts.on("--ssl", "Run with SSL support. Autogenerates a self-signed certificates by default.") do
        options[:ssl] = true
    end

    opts.on("--ssl-cert FILE", "Specify the SSL certificate you'd like use use. Pair with --ssl-key.") do |arg|
        ssl_opts[:cert_chain_file] = arg
    end

    opts.on("--ssl-key FILE", "Specify the SSL key file you'd like use use. Pair with --ssl-cert.") do |arg|
        ssl_opts[:private_key_file] = arg
    end

    opts.separator('')

    opts.on("-h", "--help", "Displays this help") do
        puts
        puts opts
        puts
        exit
    end

    # Another typical switch to print the version.
    opts.on_tail("--version", "Show version") do
      require 'rangefinder/webhook/version'

      puts "Rangefinder: #{Rangefinder::VERSION}"
      puts "Webhook Server: #{Rangefinder::Webhook::VERSION}"
      exit
    end
}
optparse.parse!

config        = YAML.load_file(configfile) rescue {}
options       = defaults.merge(config.merge(options))
$logger       = Logger.new(options[:logfile])
$logger.level = loglevel

unless options.include? :github
  url = 'https://developer.github.com/apps/building-github-apps/creating-a-github-app/'
  raise "Please register a new GitHub app and configure Rangefinder. See #{url}"
end
unless options[:github].include? :private_key_file
  url = 'https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/'
  raise "Please generate a new GitHub private key. See #{url}"
end
unless options.include? :gcloud
  url = 'https://cloud.google.com/docs/authentication/getting-started'
  raise "Please create a new Google Cloud service account and configure Rangefinder. See #{url}"
end

# These options should either both be nil or both be Strings
unless ssl_opts[:cert_chain_file].class == ssl_opts[:private_key_file].class
  raise 'You must specify both the certificate and key file!'
end

if ssl_opts[:cert_chain_file] and ssl_opts[:private_key_file]
  options[:ssl] = true
end

options[:github][:private_key_file] = File.expand_path(options[:github][:private_key_file])

if ARGV.first == 'shell'
  require 'pry'
  binding.pry
  exit 0
end

puts
puts
puts "Starting Rangefinder GitHub application webhook..."
puts
puts

Rangefinder::Webhook.run!(options) do |server|
  if options[:ssl]
    if server.respond_to? 'ssl='
      $logger.info 'Enabling SSL support.'
      server.ssl         = true
      server.ssl_options = ssl_opts
    else
      $logger.warn "Please 'gem install thin' or run via an app server for SSL support."
    end
  end
end
